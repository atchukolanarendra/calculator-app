{"version":3,"sources":["components/Display.js","components/Button.js","components/History.js","components/Calculator.js","App.js","index.js"],"names":["Display","_ref","value","React","createElement","className","Button","label","onClick","History","history","length","map","item","index","key","Calculator","input","setInput","useState","setHistory","handleClick","result","expression","sanitizedExpression","replace","Function","toString","e","calculate","slice","btn","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yJAUeA,MARCC,IAAe,IAAdC,MAAEA,GAAOD,EACxB,OACEE,IAAAC,cAAA,OAAKC,UAAU,WACZH,GAAS,MCKDI,MARAL,IAAwB,IAAvBM,MAAEA,EAAKC,QAAEA,GAASP,EAChC,OACEE,IAAAC,cAAA,UAAQC,UAAU,SAASG,QAASA,GACjCD,ICcQE,MAjBCR,IAAiB,IAAhBS,QAAEA,GAAST,EAC1B,OACEE,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UACsB,IAAnBM,EAAQC,OACPR,IAAAC,cAAA,UAAI,kBAEJM,EAAQE,IAAI,CAACC,EAAMC,IACjBX,IAAAC,cAAA,MAAIW,IAAKD,GAAQD,OCgDdG,MAtDIA,KACjB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BT,EAASU,GAAcD,mBAAS,IAejCE,EAAenB,IACnB,GAAc,MAAVA,EAAe,CACjB,MAAMoB,EAdSC,KACjB,IAEE,MAAMC,EAAsBD,EAAWE,QAAQ,mBAAoB,IAGnE,OADe,IAAIC,SAAS,UAAYF,EAAzB,GACDG,WACd,MAAOC,GACP,MAAO,UAMQC,CAAUZ,GACzBG,EAAW,IAAIV,KAAYO,OAAWK,MACtCJ,EAASI,QAETJ,EADmB,MAAVhB,EACA,GACU,WAAVA,EACAe,EAAMa,MAAM,GAAI,GAEhBb,EAAQf,IAYrB,OACEC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAACJ,EAAO,CAACE,MAAOe,IAChBd,IAAAC,cAAA,OAAKC,UAAU,WAZL,CACd,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,IAAK,IAAK,IACf,IAAK,UAQUO,IAAI,CAACmB,EAAKjB,IACjBX,IAAAC,cAACE,EAAM,CAACS,IAAKD,EAAOP,MAAOwB,EAAKvB,QAASA,IAAMa,EAAYU,QAIjE5B,IAAAC,cAACK,EAAO,CAACC,QAASA,MCxCTsB,MAXf,WACE,OACE7B,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAACY,EAAU,eCHNiB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOlC,IAAAC,cAAC4B,EAAG","file":"static/js/main.e39a4b67.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Display = ({ value }) => {\r\n  return (\r\n    <div className=\"display\">\r\n      {value || \"0\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ label, onClick }) => {\r\n  return (\r\n    <button className=\"button\" onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst History = ({ history }) => {\r\n  return (\r\n    <div className=\"history\">\r\n      <h2>History</h2>\r\n      <ul>\r\n        {history.length === 0 ? (\r\n          <li>No history yet</li>\r\n        ) : (\r\n          history.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import React, { useState } from \"react\";\r\nimport Display from \"./Display\";\r\nimport Button from \"./Button\";\r\nimport History from \"./History\";\r\n\r\nconst Calculator = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [history, setHistory] = useState([]);\r\n\r\n  // Function to calculate the result safely without eval\r\n  const calculate = (expression) => {\r\n    try {\r\n      // Replace invalid characters (like alphabetic) before executing the expression\r\n      const sanitizedExpression = expression.replace(/[^0-9+\\-*/(). ]/g, \"\");\r\n      // Use Function to safely evaluate the expression\r\n      const result = new Function(\"return \" + sanitizedExpression)();\r\n      return result.toString();\r\n    } catch (e) {\r\n      return \"Error\";\r\n    }\r\n  };\r\n\r\n  const handleClick = (value) => {\r\n    if (value === \"=\") {\r\n      const result = calculate(input);\r\n      setHistory([...history, `${input} = ${result}`]); // Add to history\r\n      setInput(result); // Set the current input to result\r\n    } else if (value === \"C\") {\r\n      setInput(\"\");\r\n    } else if (value === \"⌫\") {\r\n      setInput(input.slice(0, -1));\r\n    } else {\r\n      setInput(input + value);\r\n    }\r\n  };\r\n\r\n  const buttons = [\r\n    \"7\", \"8\", \"9\", \"/\",\r\n    \"4\", \"5\", \"6\", \"*\",\r\n    \"1\", \"2\", \"3\", \"-\",\r\n    \"0\", \".\", \"=\", \"+\",\r\n    \"C\", \"⌫\"\r\n  ];\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <div className=\"calculator-left\">\r\n        <Display value={input} />\r\n        <div className=\"buttons\">\r\n          {buttons.map((btn, index) => (\r\n            <Button key={index} label={btn} onClick={() => handleClick(btn)} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <History history={history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport Calculator from \"./components/Calculator\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Interactive Calculator</h1>\r\n      <div className=\"calculator-container\">\r\n        <Calculator />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./App\";\r\nimport \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<App />);\r\n"],"sourceRoot":""}